////
/// Global mixins
/// @group Globals
/// @author Kris Olszewski
////

/// Create media query below horizontal breakpoint
/// ---
/// @require {variable} $breakpoints - Breakpoints
/// @param {String} $max-breakpoint - Max horizontal breakpoint
/// ---
/// @example scss - Usage
///   selector {
///     @include media-below("max-breakpoint") {
///       property: value;
///     }
///   }

@mixin media-below($max-breakpoint) {
  $max-width: (get-breakpoint("horizontal", $max-breakpoint) - 1);
  @media screen and (max-width: $max-width) {
    @content;
  }
}

/// Create media query between horizontal breakpoints
/// ---
/// @require {variable} $breakpoints - Breakpoints
/// @param {String} $min-breakpoint - Min horizontal breakpoint
/// @param {String} $max-breakpoint - Max horizontal breakpoint
/// ---
/// @example scss - Usage
///   selector {
///     @include media-between("min-breakpoint", "max-breakpoint") {
///       property: value;
///     }
///   }

@mixin media-between($min-breakpoint, $max-breakpoint) {
  $min-width: get-breakpoint("horizontal", $min-breakpoint);
  $max-width: (get-breakpoint("horizontal", $max-breakpoint) - 1);
  @media screen and (min-width: $min-width) and (max-width: $max-width) {
    @content;
  }
}

/// Create media query above horizontal breakpoint
/// ---
/// @require {variable} $breakpoints - Breakpoints
/// @param {String} $min-breakpoint - Min horizontal breakpoint
/// ---
/// @example scss - Usage
///   selector {
///     @include media-above("min-breakpoint") {
///       property: value;
///     }
///   }

@mixin media-above($min-breakpoint) {
  $min-width: get-breakpoint("horizontal", $min-breakpoint);
  @media screen and (min-width: $min-width) {
    @content;
  }
}

/// Create media query below vertical breakpoint
/// ---
/// @require {variable} $breakpoints - Breakpoints
/// @param {String} $max-breakpoint - Max vertical breakpoint
/// ---
/// @example scss - Usage
///   selector {
///     @include media-below--vertical("max-breakpoint") {
///       property: value;
///     }
///   }

@mixin media-below--vertical($max-breakpoint) {
  $max-height: (get-breakpoint("vertical", $max-breakpoint) - 1);
  @media screen and (max-height: $max-height) {
    @content;
  }
}

/// Create media query between vertical breakpoints
/// ---
/// @require {variable} $breakpoints - Breakpoints
/// @param {String} $min-breakpoint - Min vertical breakpoint
/// @param {String} $max-breakpoint - Max vertical breakpoint
/// ---
/// @example scss - Usage
///   selector {
///     @include media-between--vertical("min-breakpoint", "max-breakpoint") {
///       property: value;
///     }
///   }

@mixin media-between--vertical($min-breakpoint, $max-breakpoint) {
  $min-height: get-breakpoint("vertical", $min-breakpoint);
  $max-height: (get-breakpoint("vertical", $max-breakpoint) - 1);
  @media screen and (min-height: $min-height) and (max-height: $max-height) {
    @content;
  }
}

/// Create media query above vertical breakpoint
/// ---
/// @require {variable} $breakpoints - Breakpoints
/// @param {String} $min-breakpoint - Min vertical breakpoint
/// ---
/// @example scss - Usage
///   selector {
///     @include media-above--vertical("min-breakpoint") {
///       property: value;
///     }
///   }

@mixin media-above--vertical($min-breakpoint) {
  $min-height: get-breakpoint("vertical", $min-breakpoint);
  @media screen and (min-height: $min-height) {
    @content;
  }
}

/// Create media query for high density displays
/// ---
/// @example scss - Usage
///   selector {
///     background-image: url("/path/file.png");
///
///     @mixin media-hd() {
///       background-image: url("/path/file@2x.png");
///     }
///   }

@mixin media-hd() {
  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx) {
    @content;
  }
}

/// Create media query for ultra high density displays
/// ---
/// @example scss - Usage
///   selector {
///     background-image: url("/path/file.png");
///
///     @mixin media-hd() {
///       background-image: url("/path/file@3x.png");
///     }
///   }

@mixin media-uhd() {
  @media (-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx) {
    @content;
  }
}

/// Add clearfix to element with floating children
/// ---
/// @author Nicolas Gallagher
/// @link http://nicolasgallagher.com/micro-clearfix-hack/
/// ---
/// @example scss - Usage
///   selector {
///     @include clearfix();
///   }

@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }

  &:after {
    clear: both;
  }
}
